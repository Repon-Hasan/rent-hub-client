
import Navbar from '@/components/Navbar';
import { ThemeProvider } from '@/components/theme-provider';
import { authOptions } from '@/lib/authOptions';
import SessionProviderWrapper from '@/Providers/SessionProvider';
import { getServerSession } from 'next-auth';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';

import { ModeToggle } from "@/components/ModeToggle";
import NextAuthProvider from "@/Providers/NextAuthProvider";


const geistSans = Geist({
    variable: '--font-geist-sans',
    subsets: ['latin'],
});

const geistMono = Geist_Mono({
    variable: '--font-geist-mono',
    subsets: ['latin'],
});

export const metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
};

export default async function RootLayout({ children }) {
  const session = await getServerSession(authOptions);
  const safeSession = session
      ? {
            ...session,
            user: {
                ...session.user,
                id: session.user.id.toString(),
            },
        }
      : null;
    return (
        <html lang="en" suppressHydrationWarning>
            <body
                className={`${geistSans.variable} ${geistMono.variable} antialiased`}
            >
                <SessionProviderWrapper session={safeSession}>
                    <ThemeProvider
                        attribute="class"
                        defaultTheme="system"
                        enableSystem
                        disableTransitionOnChange
                    >
                        <Navbar />
                        
                       <NextAuthProvider>{children}</NextAuthProvider>
                    </ThemeProvider>
                </SessionProviderWrapper>
            </body>
        </html>
    );
}
